{"version":3,"sources":["scripts/main.js"],"names":["startList","document","querySelector","employees","querySelectorAll","convertToNumber","salary","slice","split","join","sortList","list","sortedList","sort","a","b","dataset","append","getEmployees","map","person","name","innerHTML"],"mappings":";AAAA,aAsBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAAYC,SAASC,cAAc,MACnCC,EAAgBF,EAAAA,SAASG,iBAAiB,OAE1CC,EAAkB,SAAAC,GAAU,OAACA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEnE,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAKE,KAAK,SAACC,EAAGC,GAC/BV,OAAAA,EAAgBU,EAAEC,QAAQV,QAAUD,EAAgBS,EAAEE,QAAQV,UAGhEN,EAAUiB,OAAVjB,MAAAA,EAAoBY,EAAAA,IAGtB,SAASM,EAAaP,GACbA,OAAAA,EAAKQ,IAAI,SAAAC,GAAM,OAAA,EAAA,CACpBC,KAAMD,EAAOE,WAAcF,EAAOJ,WAItCN,EAASP,GACTe,EAAaf","file":"main.541bf415.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startList = document.querySelector('ul');\nconst employees = [...document.querySelectorAll('li')];\n\nconst convertToNumber = salary => +salary.slice(1).split(',').join('');\n\nfunction sortList(list) {\n  const sortedList = list.sort((a, b) =>\n    convertToNumber(b.dataset.salary) - convertToNumber(a.dataset.salary)\n  );\n\n  startList.append(...sortedList);\n}\n\nfunction getEmployees(list) {\n  return list.map(person => ({\n    name: person.innerHTML, ...person.dataset,\n  }));\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}